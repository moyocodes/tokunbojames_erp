{"ast":null,"code":"/*!\n * Column visibility buttons for Buttons and DataTables.\n * 2016 SpryMedia Ltd - datatables.net/license\n */\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['jquery', 'datatables.net', 'datatables.net-buttons'], function ($) {\n      return factory($, window, document);\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = function (root, $) {\n      if (!root) {\n        root = window;\n      }\n\n      if (!$ || !$.fn.dataTable) {\n        $ = require('datatables.net')(root, $).$;\n      }\n\n      if (!$.fn.dataTable.Buttons) {\n        require('datatables.net-buttons')(root, $);\n      }\n\n      return factory($, root, root.document);\n    };\n  } else {\n    // Browser\n    factory(jQuery, window, document);\n  }\n})(function ($, window, document, undefined) {\n  'use strict';\n\n  var DataTable = $.fn.dataTable;\n  $.extend(DataTable.ext.buttons, {\n    // A collection of column visibility buttons\n    colvis: function (dt, conf) {\n      var node = null;\n      var buttonConf = {\n        extend: 'collection',\n        init: function (dt, n) {\n          node = n;\n        },\n        text: function (dt) {\n          return dt.i18n('buttons.colvis', 'Column visibility');\n        },\n        className: 'buttons-colvis',\n        buttons: [{\n          extend: 'columnsToggle',\n          columns: conf.columns,\n          columnText: conf.columnText\n        }]\n      }; // Rebuild the collection with the new column structure if columns are reordered\n\n      dt.on('column-reorder.dt' + conf.namespace, function (e, settings, details) {\n        // console.log(node);\n        // console.log('node', dt.button(null, node).node());\n        dt.button(null, dt.button(null, node).node()).collectionRebuild([{\n          extend: 'columnsToggle',\n          columns: conf.columns,\n          columnText: conf.columnText\n        }]);\n      });\n      return buttonConf;\n    },\n    // Selected columns with individual buttons - toggle column visibility\n    columnsToggle: function (dt, conf) {\n      var columns = dt.columns(conf.columns).indexes().map(function (idx) {\n        return {\n          extend: 'columnToggle',\n          columns: idx,\n          columnText: conf.columnText\n        };\n      }).toArray();\n      return columns;\n    },\n    // Single button to toggle column visibility\n    columnToggle: function (dt, conf) {\n      return {\n        extend: 'columnVisibility',\n        columns: conf.columns,\n        columnText: conf.columnText\n      };\n    },\n    // Selected columns with individual buttons - set column visibility\n    columnsVisibility: function (dt, conf) {\n      var columns = dt.columns(conf.columns).indexes().map(function (idx) {\n        return {\n          extend: 'columnVisibility',\n          columns: idx,\n          visibility: conf.visibility,\n          columnText: conf.columnText\n        };\n      }).toArray();\n      return columns;\n    },\n    // Single button to set column visibility\n    columnVisibility: {\n      columns: undefined,\n      // column selector\n      text: function (dt, button, conf) {\n        return conf._columnText(dt, conf);\n      },\n      className: 'buttons-columnVisibility',\n      action: function (e, dt, button, conf) {\n        var col = dt.columns(conf.columns);\n        var curr = col.visible();\n        col.visible(conf.visibility !== undefined ? conf.visibility : !(curr.length ? curr[0] : false));\n      },\n      init: function (dt, button, conf) {\n        var that = this;\n        button.attr('data-cv-idx', conf.columns);\n        dt.on('column-visibility.dt' + conf.namespace, function (e, settings) {\n          if (!settings.bDestroying && settings.nTable == dt.settings()[0].nTable) {\n            that.active(dt.column(conf.columns).visible());\n          }\n        }).on('column-reorder.dt' + conf.namespace, function (e, settings, details) {\n          // Button has been removed from the DOM\n          if (conf.destroying) {\n            return;\n          }\n\n          if (dt.columns(conf.columns).count() !== 1) {\n            return;\n          } // This button controls the same column index but the text for the column has\n          // changed\n\n\n          that.text(conf._columnText(dt, conf)); // Since its a different column, we need to check its visibility\n\n          that.active(dt.column(conf.columns).visible());\n        });\n        this.active(dt.column(conf.columns).visible());\n      },\n      destroy: function (dt, button, conf) {\n        dt.off('column-visibility.dt' + conf.namespace).off('column-reorder.dt' + conf.namespace);\n      },\n      _columnText: function (dt, conf) {\n        // Use DataTables' internal data structure until this is presented\n        // is a public API. The other option is to use\n        // `$( column(col).node() ).text()` but the node might not have been\n        // populated when Buttons is constructed.\n        var idx = dt.column(conf.columns).index();\n        var title = dt.settings()[0].aoColumns[idx].sTitle;\n\n        if (!title) {\n          title = dt.column(idx).header().innerHTML;\n        }\n\n        title = title.replace(/\\n/g, \" \") // remove new lines\n        .replace(/<br\\s*\\/?>/gi, \" \") // replace line breaks with spaces\n        .replace(/<select(.*?)<\\/select>/g, \"\") // remove select tags, including options text\n        .replace(/<!\\-\\-.*?\\-\\->/g, \"\") // strip HTML comments\n        .replace(/<.*?>/g, \"\") // strip HTML\n        .replace(/^\\s+|\\s+$/g, \"\"); // trim\n\n        return conf.columnText ? conf.columnText(dt, idx, title) : title;\n      }\n    },\n    colvisRestore: {\n      className: 'buttons-colvisRestore',\n      text: function (dt) {\n        return dt.i18n('buttons.colvisRestore', 'Restore visibility');\n      },\n      init: function (dt, button, conf) {\n        conf._visOriginal = dt.columns().indexes().map(function (idx) {\n          return dt.column(idx).visible();\n        }).toArray();\n      },\n      action: function (e, dt, button, conf) {\n        dt.columns().every(function (i) {\n          // Take into account that ColReorder might have disrupted our\n          // indexes\n          var idx = dt.colReorder && dt.colReorder.transpose ? dt.colReorder.transpose(i, 'toOriginal') : i;\n          this.visible(conf._visOriginal[idx]);\n        });\n      }\n    },\n    colvisGroup: {\n      className: 'buttons-colvisGroup',\n      action: function (e, dt, button, conf) {\n        dt.columns(conf.show).visible(true, false);\n        dt.columns(conf.hide).visible(false, false);\n        dt.columns.adjust();\n      },\n      show: [],\n      hide: []\n    }\n  });\n  return DataTable.Buttons;\n});","map":{"version":3,"sources":["/Users/mac/Desktop/tokunbojames_erp/node_modules/datatables.net-buttons/js/buttons.colVis.js"],"names":["factory","define","amd","$","window","document","exports","module","root","fn","dataTable","require","Buttons","jQuery","undefined","DataTable","extend","ext","buttons","colvis","dt","conf","node","buttonConf","init","n","text","i18n","className","columns","columnText","on","namespace","e","settings","details","button","collectionRebuild","columnsToggle","indexes","map","idx","toArray","columnToggle","columnsVisibility","visibility","columnVisibility","_columnText","action","col","curr","visible","length","that","attr","bDestroying","nTable","active","column","destroying","count","destroy","off","index","title","aoColumns","sTitle","header","innerHTML","replace","colvisRestore","_visOriginal","every","i","colReorder","transpose","colvisGroup","show","hide","adjust"],"mappings":"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","sourcesContent":["/*!\n * Column visibility buttons for Buttons and DataTables.\n * 2016 SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net', 'datatables.net-buttons'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\tif ( ! $.fn.dataTable.Buttons ) {\n\t\t\t\trequire('datatables.net-buttons')(root, $);\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n$.extend( DataTable.ext.buttons, {\n\t// A collection of column visibility buttons\n\tcolvis: function ( dt, conf ) {\n\t\tvar node = null;\n\t\tvar buttonConf = {\n\t\t\textend: 'collection',\n\t\t\tinit: function ( dt, n ) {\n\t\t\t\tnode = n;\n\t\t\t},\n\t\t\ttext: function ( dt ) {\n\t\t\t\treturn dt.i18n( 'buttons.colvis', 'Column visibility' );\n\t\t\t},\n\t\t\tclassName: 'buttons-colvis',\n\t\t\tbuttons: [ {\n\t\t\t\textend: 'columnsToggle',\n\t\t\t\tcolumns: conf.columns,\n\t\t\t\tcolumnText: conf.columnText\n\t\t\t} ]\n\t\t};\n\n\t\t// Rebuild the collection with the new column structure if columns are reordered\n\t\tdt.on( 'column-reorder.dt'+conf.namespace, function (e, settings, details) {\n\t\t\t// console.log(node);\n\t\t\t// console.log('node', dt.button(null, node).node());\n\t\t\tdt.button(null, dt.button(null, node).node()).collectionRebuild([{\n\t\t\t\textend: 'columnsToggle',\n\t\t\t\tcolumns: conf.columns,\n\t\t\t\tcolumnText: conf.columnText\n\t\t\t}]);\n\t\t});\n\n\t\treturn buttonConf;\n\t},\n\n\t// Selected columns with individual buttons - toggle column visibility\n\tcolumnsToggle: function ( dt, conf ) {\n\t\tvar columns = dt.columns( conf.columns ).indexes().map( function ( idx ) {\n\t\t\treturn {\n\t\t\t\textend: 'columnToggle',\n\t\t\t\tcolumns: idx,\n\t\t\t\tcolumnText: conf.columnText\n\t\t\t};\n\t\t} ).toArray();\n\n\t\treturn columns;\n\t},\n\n\t// Single button to toggle column visibility\n\tcolumnToggle: function ( dt, conf ) {\n\t\treturn {\n\t\t\textend: 'columnVisibility',\n\t\t\tcolumns: conf.columns,\n\t\t\tcolumnText: conf.columnText\n\t\t};\n\t},\n\n\t// Selected columns with individual buttons - set column visibility\n\tcolumnsVisibility: function ( dt, conf ) {\n\t\tvar columns = dt.columns( conf.columns ).indexes().map( function ( idx ) {\n\t\t\treturn {\n\t\t\t\textend: 'columnVisibility',\n\t\t\t\tcolumns: idx,\n\t\t\t\tvisibility: conf.visibility,\n\t\t\t\tcolumnText: conf.columnText\n\t\t\t};\n\t\t} ).toArray();\n\n\t\treturn columns;\n\t},\n\n\t// Single button to set column visibility\n\tcolumnVisibility: {\n\t\tcolumns: undefined, // column selector\n\t\ttext: function ( dt, button, conf ) {\n\t\t\treturn conf._columnText( dt, conf );\n\t\t},\n\t\tclassName: 'buttons-columnVisibility',\n\t\taction: function ( e, dt, button, conf ) {\n\t\t\tvar col = dt.columns( conf.columns );\n\t\t\tvar curr = col.visible();\n\n\t\t\tcol.visible( conf.visibility !== undefined ?\n\t\t\t\tconf.visibility :\n\t\t\t\t! (curr.length ? curr[0] : false )\n\t\t\t);\n\t\t},\n\t\tinit: function ( dt, button, conf ) {\n\t\t\tvar that = this;\n\t\t\tbutton.attr( 'data-cv-idx', conf.columns );\n\n\t\t\tdt\n\t\t\t\t.on( 'column-visibility.dt'+conf.namespace, function (e, settings) {\n\t\t\t\t\tif ( ! settings.bDestroying && settings.nTable == dt.settings()[0].nTable ) {\n\t\t\t\t\t\tthat.active( dt.column( conf.columns ).visible() );\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( 'column-reorder.dt'+conf.namespace, function (e, settings, details) {\n\t\t\t\t\t// Button has been removed from the DOM\n\t\t\t\t\tif ( conf.destroying ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dt.columns( conf.columns ).count() !== 1 ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// This button controls the same column index but the text for the column has\n\t\t\t\t\t// changed\n\t\t\t\t\tthat.text( conf._columnText( dt, conf ) );\n\n\t\t\t\t\t// Since its a different column, we need to check its visibility\n\t\t\t\t\tthat.active( dt.column( conf.columns ).visible() );\n\t\t\t\t} );\n\n\t\t\tthis.active( dt.column( conf.columns ).visible() );\n\t\t},\n\t\tdestroy: function ( dt, button, conf ) {\n\t\t\tdt\n\t\t\t\t.off( 'column-visibility.dt'+conf.namespace )\n\t\t\t\t.off( 'column-reorder.dt'+conf.namespace );\n\t\t},\n\n\t\t_columnText: function ( dt, conf ) {\n\t\t\t// Use DataTables' internal data structure until this is presented\n\t\t\t// is a public API. The other option is to use\n\t\t\t// `$( column(col).node() ).text()` but the node might not have been\n\t\t\t// populated when Buttons is constructed.\n\t\t\tvar idx = dt.column( conf.columns ).index();\n\t\t\tvar title = dt.settings()[0].aoColumns[ idx ].sTitle;\n\n\t\t\tif (! title) {\n\t\t\t\ttitle = dt.column(idx).header().innerHTML;\n\t\t\t}\n\n\t\t\ttitle = title\n\t\t\t\t.replace(/\\n/g,\" \")        // remove new lines\n\t\t\t\t.replace(/<br\\s*\\/?>/gi, \" \")  // replace line breaks with spaces\n\t\t\t\t.replace(/<select(.*?)<\\/select>/g, \"\") // remove select tags, including options text\n\t\t\t\t.replace(/<!\\-\\-.*?\\-\\->/g, \"\") // strip HTML comments\n\t\t\t\t.replace(/<.*?>/g, \"\")   // strip HTML\n\t\t\t\t.replace(/^\\s+|\\s+$/g,\"\"); // trim\n\n\t\t\treturn conf.columnText ?\n\t\t\t\tconf.columnText( dt, idx, title ) :\n\t\t\t\ttitle;\n\t\t}\n\t},\n\n\n\tcolvisRestore: {\n\t\tclassName: 'buttons-colvisRestore',\n\n\t\ttext: function ( dt ) {\n\t\t\treturn dt.i18n( 'buttons.colvisRestore', 'Restore visibility' );\n\t\t},\n\n\t\tinit: function ( dt, button, conf ) {\n\t\t\tconf._visOriginal = dt.columns().indexes().map( function ( idx ) {\n\t\t\t\treturn dt.column( idx ).visible();\n\t\t\t} ).toArray();\n\t\t},\n\n\t\taction: function ( e, dt, button, conf ) {\n\t\t\tdt.columns().every( function ( i ) {\n\t\t\t\t// Take into account that ColReorder might have disrupted our\n\t\t\t\t// indexes\n\t\t\t\tvar idx = dt.colReorder && dt.colReorder.transpose ?\n\t\t\t\t\tdt.colReorder.transpose( i, 'toOriginal' ) :\n\t\t\t\t\ti;\n\n\t\t\t\tthis.visible( conf._visOriginal[ idx ] );\n\t\t\t} );\n\t\t}\n\t},\n\n\n\tcolvisGroup: {\n\t\tclassName: 'buttons-colvisGroup',\n\n\t\taction: function ( e, dt, button, conf ) {\n\t\t\tdt.columns( conf.show ).visible( true, false );\n\t\t\tdt.columns( conf.hide ).visible( false, false );\n\n\t\t\tdt.columns.adjust();\n\t\t},\n\n\t\tshow: [],\n\n\t\thide: []\n\t}\n} );\n\n\nreturn DataTable.Buttons;\n}));\n"]},"metadata":{},"sourceType":"script"}