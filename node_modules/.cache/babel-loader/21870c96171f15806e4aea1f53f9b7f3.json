{"ast":null,"code":"var _s = $RefreshSig$();\n\n// @ts-nocheck\n\n/* eslint-disable no-underscore-dangle */\n\n/* eslint-disable import/prefer-default-export */\nimport { useReducer } from 'react';\nimport axios from 'axios';\nimport { LOGGED_IN_USER_URL } from 'url/auth/AuthUrl';\nimport { LOADING_STARTS, LOADING_STOPS } from 'types/LoadingTypes';\nimport { LOGIN_USER } from 'types/auth/AuthTypes';\nimport { userReducers } from 'reducers/userReducers';\nimport { toast } from 'react-toastify';\n\nconst useUser = () => {\n  _s();\n\n  const [{\n    users,\n    isLoading\n  }, dispatch] = useReducer(userReducers, {\n    users: [],\n    user: {},\n    isLoading: false\n  });\n\n  const getLoggedInUser = async () => {\n    dispatch({\n      type: LOADING_STARTS\n    });\n    const config = {\n      method: 'get',\n      url: `${LOGGED_IN_USER_URL}`,\n      headers: {\n        Authorization: `Bearer ${sessionStorage.getItem('token')}`\n      }\n    };\n    axios(config).then(response => {\n      if (response.status === 'OK') {\n        console.log(response.data.data);\n        dispatch({\n          type: LOGIN_USER,\n          payload: {\n            users: response.data.data\n          }\n        });\n      }\n    }).catch(() => {\n      toast.error('Something went wrong');\n      dispatch({\n        type: LOADING_STOPS\n      });\n    });\n  };\n\n  return {\n    users,\n    user,\n    getLoggedInUser,\n    isLoading\n  };\n};\n\n_s(useUser, \"csMFmShA4Kh2Jqv0pCDwj5Rk5QE=\");\n\nexport default useUser;","map":{"version":3,"sources":["/Users/mac/Desktop/tokunbojames_erp/src/hooks/user/useUser.js"],"names":["useReducer","axios","LOGGED_IN_USER_URL","LOADING_STARTS","LOADING_STOPS","LOGIN_USER","userReducers","toast","useUser","users","isLoading","dispatch","user","getLoggedInUser","type","config","method","url","headers","Authorization","sessionStorage","getItem","then","response","status","console","log","data","payload","catch","error"],"mappings":";;AAAA;;AACA;;AACA;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,oBAA9C;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEC,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACf,QAAM,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAwBC,QAAxB,IAAoCX,UAAU,CAACM,YAAD,EAAe;AACjEG,IAAAA,KAAK,EAAE,EAD0D;AAEjEG,IAAAA,IAAI,EAAE,EAF2D;AAGjEF,IAAAA,SAAS,EAAE;AAHsD,GAAf,CAApD;;AAMA,QAAMG,eAAe,GAAG,YAAY;AAClCF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AACA,UAAMY,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE,KADK;AAEbC,MAAAA,GAAG,EAAG,GAAEf,kBAAmB,EAFd;AAGbgB,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAgC;AADlD;AAHI,KAAf;AAOApB,IAAAA,KAAK,CAACc,MAAD,CAAL,CACGO,IADH,CACSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,IAAxB,EAA8B;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcA,IAA1B;AACAhB,QAAAA,QAAQ,CAAC;AACPG,UAAAA,IAAI,EAAET,UADC;AAEPuB,UAAAA,OAAO,EAAE;AACPnB,YAAAA,KAAK,EAAEc,QAAQ,CAACI,IAAT,CAAcA;AADd;AAFF,SAAD,CAAR;AAMD;AACF,KAXH,EAYGE,KAZH,CAYS,MAAM;AACTtB,MAAAA,KAAK,CAACuB,KAAN,CAAY,sBAAZ;AACFnB,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAACV;AAAP,OAAD,CAAR;AACD,KAfH;AAgBD,GAzBD;;AA2BN,SAAO;AAAEK,IAAAA,KAAF;AAASG,IAAAA,IAAT;AAAeC,IAAAA,eAAf;AAAiCH,IAAAA;AAAjC,GAAP;AACD,CAnCA;;GAAMF,O;;AAqCP,eAAeA,OAAf","sourcesContent":["// @ts-nocheck\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable import/prefer-default-export */\nimport { useReducer } from 'react';\nimport axios from 'axios';\nimport { LOGGED_IN_USER_URL } from 'url/auth/AuthUrl';\nimport { LOADING_STARTS, LOADING_STOPS } from 'types/LoadingTypes';\nimport { LOGIN_USER } from 'types/auth/AuthTypes';\nimport { userReducers } from 'reducers/userReducers';\nimport { toast } from 'react-toastify';\n\n const useUser = () => {\n        const [{ users, isLoading, }, dispatch] = useReducer(userReducers, {\n          users: [],\n          user: {},\n          isLoading: false,\n        });\n      \n        const getLoggedInUser = async () => {\n          dispatch({ type: LOADING_STARTS });\n          const config = {\n            method: 'get',\n            url: `${LOGGED_IN_USER_URL}`,\n            headers: {\n              Authorization: `Bearer ${sessionStorage.getItem('token')}`,\n            },\n          };\n          axios(config)\n            .then((response) => {\n              if (response.status === 'OK') {\n                console.log(response.data.data);\n                dispatch({\n                  type: LOGIN_USER,\n                  payload: {\n                    users: response.data.data,\n                  },\n                });\n              }\n            })\n            .catch(() => {\n                toast.error('Something went wrong');\n              dispatch({ type:LOADING_STOPS });\n            });\n        };\n    \n  return { users, user, getLoggedInUser,  isLoading };\n};\n\nexport default useUser;"]},"metadata":{},"sourceType":"module"}